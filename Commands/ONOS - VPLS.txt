# Creates a new VPLS
onos> vpls create {$VPLS_NAME}
 
# Deletes an existing VPLS
onos> vpls delete {$VPLS_NAME}
 
# Lists the configured VPLSs
onos> vpls list
Configured VPLSs
----------------
VPLS1
VPLS2
 
# Shows the list configured VPLSs, including their interfaces and the encapsulation type in use. If a VPLS name is specified, only the details for that VPLS are returned.
onos> vpls show [$VPLS_NAME]
Configured VPLSs
----------------
VPLS name: VPLS1
Associated interfaces: [h1, h2, h5, h6]
Encapsulation: NONE
----------------
VPLS name: VPLS2
Associated interfaces: [h3, h4]
Encapsulation: VLAN
----------------

 
# Sets the encapsulation type for a VPLS
onos> vpls set-encap {$VPLS_NAME} {VLAN|MPLS|NONE}



# Adds an existing interface (in netcfg) to an existing VPLS
onos> vpls add-if {$VPLS_NAME} {$INTERFACE_NAME}
# Removes an existing interface from an existing VPLS
onos> vpls rem-if {$VPLS_NAME} {$INTERFACE_NAME}



# Cleans the status of the VPLS application (i.e., deletes VPLSs, removes interfaces from existing VPLSs and withdraws intents)
onos> vpls clean



xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx


Example:

interface-add of:00008a507a0c8f4a/14 h1
interface-add of:0000a2f8233e3643/14 h2
interface-add of:000022494702a540/14 h3
interface-add of:0000b210c06d6046/14 s1
interface-add of:0000fa9767881347/14 s2
interface-add of:00005eba6686e24f/14 s3
 
vpls create VPLS1
vpls add-if VPLS1 h1
vpls add-if VPLS1 s2
vpls add-if VPLS1 s3
 
vpls create VPLS2
vpls add-if VPLS2 s1
vpls add-if VPLS2 h2
vpls add-if VPLS2 h3

vpls list 
vpls show

